<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-11-08T10:11:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>TDD</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/08/tdd.html"/>
    <id>http://blog.url.com/2013/11/08/tdd.html</id>
    <published>2013-11-08T10:11:00Z</published>
    <updated>2013-11-09T01:38:25+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://256interns.com/practices/44"&gt;http://256interns.com/practices/44&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今日はTDDのプラクティスやりました。@t_wadaさんの講義すごくためになりました。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://gihyo.jp/dev/serial/01/tdd/0016"&gt;TDDで新しい言語を学ぶ話&lt;/a&gt;、実践してみたい。
&lt;a href="http://gihyo.jp/dev/serial/01/tdd/0020"&gt;テストコードの重複の話&lt;/a&gt;も面白かったです。&lt;/p&gt;

&lt;p&gt;テストの粒度やモックの話など、考え始めるときりがないですが、そこがテストの面白さかなあーと思ったりしています。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>gitとhttp</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/07/git-http.html"/>
    <id>http://blog.url.com/2013/11/07/git-http.html</id>
    <published>2013-11-07T10:16:00Z</published>
    <updated>2013-11-09T01:38:25+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;Git: &lt;a href="http://256interns.com/practices/48"&gt;http://256interns.com/practices/48&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTTP: &lt;a href="http://256interns.com/practices/15"&gt;http://256interns.com/practices/15&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今日は、GitとHTTPをメインに進めていきました。
いままで、なんとなくでやっていたところをしっかりと学ぶ感じです。&lt;/p&gt;

&lt;p&gt;Gitは &lt;a href="http://k.swd.cc/learnGitBranching-ja/"&gt;http://k.swd.cc/learnGitBranching-ja/&lt;/a&gt; がすごいよかったです。
こうやってビジュアル的に理解できると、後々記憶に残りそう。
&lt;code&gt;$ show solution&lt;/code&gt;でカンニングできるので、わからない時につかいます。&lt;/p&gt;

&lt;p&gt;明日からは、いよいよRails開発っぽいところに入っていきます。楽しみ。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>VagrantとNginxとRubygemsと</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/06/vagrant-nginx-rubygems.html"/>
    <id>http://blog.url.com/2013/11/06/vagrant-nginx-rubygems.html</id>
    <published>2013-11-06T14:48:00Z</published>
    <updated>2013-11-09T01:38:25+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;昨日は日記かけてませんでしたが、2回目の学習週ということでOSXにNginxインストールしたりしてました。が、どうやらDebianにインストールするのが正解だったみたいで今日はそのやり直しなどです。せっかくなので、Vagrantとかを使ってみた記録です。あと、初めてgemをリリースしました。&lt;/p&gt;

&lt;h1 id="toc_0"&gt;Vagrant で Debian Wheezy&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title="Debian 7 (Wheezy) をVagrantで再現可能な開発環境としてMac上に構築 2013年版 - Qiita [キータ]" href="http://qiita.com/reoring/items/7a333d1cbea82044207e"&gt;Debian 7 (Wheezy) をVagrantで再現可能な開発環境としてMac上に構築 2013年版 - Qiita [キータ]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などを参考に進めてました。ただ、ググってるとすでにできてるboxファイルを配布していることがわかったのでそっちを使いました。&lt;/p&gt;

&lt;p&gt;というわけで、Mac(OSX Mavericks)にVagrantでDebian(wheezy)をインストールするメモです。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;手順&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;まず、VirtualBoxのインストール。&lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt; から、x86/amd64向けのイメージをダウンロードして、マウントしてインストール。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;次に、Vagrantのインストール。&lt;a href="http://downloads.vagrantup.com"&gt;http://downloads.vagrantup.com&lt;/a&gt; からイメージファイルをダウンロードして、マウントしてVagrantをインストール。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;仮想マシンの準備。以下、&amp;quot;wheezy&amp;quot;は仮想マシンの名前なので、適当に変えて良い。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;vagrant box add wheezy https://dl.dropboxusercontent.com/u/197673519/debian-7.2.0.box
&lt;/pre&gt;
&lt;p&gt;このコマンドで、ウェブ上のboxファイル（VirtualBoxの仮想マシンとVagrantの設定をまとめたもの?）がダウンロードされて、VirtualBoxのマシンイメージが&lt;code&gt;~/.vagrant.d/boxes/wheezy&lt;/code&gt;の中に展開される。ファイルは大きいのでちょっと時間がかかる。コーヒーでも飲んで待つ。ちなみに、Wheezy以外のboxイメージは &lt;a href="http://www.vagrantbox.es"&gt;http://www.vagrantbox.es&lt;/a&gt; にリストアップされている。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;適当なディレクトリ(~/box等、なかったらつくる)に移動。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.で移動したディレクトリで&lt;code&gt;$ vagrant init wheezy&lt;/code&gt;とすると、Vagrantで仮想マシンを起動するための設定ファイルが展開される。これで準備完了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同じディレクトリで&lt;code&gt;$ vagrant up&lt;/code&gt;で仮想マシン起動&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ vagrant ssh&lt;/code&gt;で仮想マシンにssh接続(login:vagrant, passwd:vagrant)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ vagrant halt&lt;/code&gt;で仮想マシンをシャットダウン&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="toc_2"&gt;そのほか&lt;/h2&gt;

&lt;h3 id="toc_3"&gt;IPアドレスを設定する（ホストと仮想マシンのプライベートネットワーク）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.absolute-keitarou.net/blog/?p=579#IP"&gt;http://www.absolute-keitarou.net/blog/?p=579#IP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mavericksで「Failed to create the host-only adapter」エラーが出る場合はVirtualBox再インストールで直った

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.fkoji.com/2013/10260009.html"&gt;http://blog.fkoji.com/2013/10260009.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="toc_4"&gt;Debian Wheezy で Nginx&lt;/h1&gt;

&lt;h2 id="toc_5"&gt;手順&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ apt-cache policy nginx&lt;/code&gt; でaptのnginxバージョンをチェック-&gt; 1.2とかなので、1.4を入れたい&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.dotdeb.org/"&gt;http://www.dotdeb.org/&lt;/a&gt; で1.4のパッケージがホストされている (RedisやMySQLの新しいパッケージもホストされてて便利)ので &lt;a href="http://www.dotdeb.org/instructions/"&gt;http://www.dotdeb.org/instructions/&lt;/a&gt; に従ってリポジトリをaddして、&lt;code&gt;$ sudo apt-get install nginx&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="toc_6"&gt;操作方法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sudo nginx&lt;/code&gt;でサーバスタート&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo nginx -s stop&lt;/code&gt;でサーバ止める&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo nginx -s reload&lt;/code&gt;で設定ロード&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_7"&gt;設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;設定は&lt;code&gt;/etc/nginx&lt;/code&gt;以下&lt;/li&gt;
&lt;li&gt;独自設定は&lt;code&gt;/etc/nginx/conf.d/*.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;サイト設定は&lt;code&gt;/etc/nginx/sites-enabled/*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="toc_8"&gt;nyaaaaaというgemをリリースしました&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/yukihr/nyaaaaa"&gt;https://github.com/yukihr/nyaaaaa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;aの数は５つです！嫌な予感しかしねえ！&lt;/p&gt;

&lt;h2 id="toc_9"&gt;インストール&lt;/h2&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;gem install nyaaaaa
&lt;/pre&gt;
&lt;h2 id="toc_10"&gt;使い方&lt;/h2&gt;

&lt;p&gt;顧客の無理な要求に心がやさぐれた時、アサインされたプロジェクトが炎上必至で未来に絶望しか感じられない時などに、PCを床に叩きつける代わりに&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;nyaaaaa
&lt;/pre&gt;
&lt;p&gt;とか打ってみてください。この世のものとは思えないほど可愛らしい生物があなたの心を潤してくれることでしょう。&lt;/p&gt;

&lt;p&gt;まあ、ちょっとは癒やされるんじゃないかな・・・。&lt;/p&gt;

&lt;p&gt;・・・またひとつ、ネタgemで神聖なrubygems.orgが汚されてしまいました。&lt;/p&gt;

&lt;h2 id="toc_11"&gt;参考に&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bundler gem&lt;/code&gt;でぐぐると、Bundlerでgemのひな形をつくって開発する方法が出てくる&lt;/li&gt;
&lt;li&gt;CLIを作るときのhowto: &lt;a href="http://www.michaelrigart.be/en/blog/a-simple-ruby-command-line-tool.html"&gt;http://www.michaelrigart.be/en/blog/a-simple-ruby-command-line-tool.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>怖話の作業をやっています</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/01/kowobana-work.html"/>
    <id>http://blog.url.com/2013/11/01/kowobana-work.html</id>
    <published>2013-11-01T07:55:00Z</published>
    <updated>2013-11-09T01:38:25+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;RSpecの書き方よくわからないんですよねー、と相談したら解説書を@nomnelさんに教えていただきました！&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/everydayrails/rspec_rails_4"&gt;https://github.com/everydayrails/rspec_rails_4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;昨日は、SassつかうならFoundationというフレームワークが良い、と@machidaさんに教えていただきました！&lt;/p&gt;

&lt;p&gt;&lt;a href="http://foundation.zurb.com"&gt;http://foundation.zurb.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;いまは、ViewとかHelperとか触ってます。
あと、昨日初めてkowabanaに送ったPullReqがマージされました！わーい！&lt;/p&gt;

&lt;p&gt;あとあと、kowabanaのPullReqに付けられたコメントの数々がすごい勉強になることに気づきました！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>怖話の作業開始</title>
    <link rel="alternate" href="http://blog.url.com/2013/10/30/start-working-on-kowabana.html"/>
    <id>http://blog.url.com/2013/10/30/start-working-on-kowabana.html</id>
    <published>2013-10-30T05:35:00Z</published>
    <updated>2013-11-09T01:38:25+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;今日から本格的に怖話の作業開始です。
Fulcrum眺めてて、できそうなタスクをやってみました。
んー、なんか難しいタスクを取ってしまったっぽい・・・。
結局そのタスクは後日に回す事になってしまって、関連のある別のタスクをやりました。&lt;/p&gt;

&lt;p&gt;積極的にFulcrumでタスクこなしてる方すごいなー、と思いました。
早くそんなふうになりたいですね。&lt;/p&gt;

&lt;p&gt;学習週の学習もかなり勉強にはなるのですが、実際に動いているプロダクトの作業ができるのはほんとにスキルアップになりますね。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>怖話の環境構築とFulcrum。風邪引いた。</title>
    <link rel="alternate" href="http://blog.url.com/2013/10/29/kowabana-fulcrum-get-cold.html"/>
    <id>http://blog.url.com/2013/10/29/kowabana-fulcrum-get-cold.html</id>
    <published>2013-10-29T10:00:00Z</published>
    <updated>2013-11-09T01:38:25+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;(昨日は日記書くことができませんでした。翌日に今日のつもりで書いています。)&lt;/p&gt;

&lt;p&gt;風邪気味で鼻水は出るし、頭ぼーっとしてるしであまり進捗はありません。&lt;/p&gt;

&lt;p&gt;昨日はインターンの後sendagaya.rbに初参加してきました。sendagaya.rb、前々から行ってみたいなーと思っててやっと行くことが出来ました。&lt;/p&gt;

&lt;p&gt;技術レベルの高い人達に囲まれて緊張してたんですが、和気あいあいとした感じで、とても良い時間を過ごせました。ruby初心者でもほんとにもくもく出来る感じで、お勧めです。&lt;/p&gt;

&lt;p&gt;このブログのテンプレートをいじるなどしていました。Fjordのインターンにも興味持ってもらえて嬉しいです。&lt;/p&gt;

&lt;p&gt;今日はまず怖話のローカル環境構築です。Railsは何回かやったことがあるので、環境構築自体はスムーズに進みました。&lt;/p&gt;

&lt;p&gt;そして、Flucrum。前の職場でBacklog使ってたんですが、Backlogに比べると数段難しぃ・・・。Chilly binなにそれ・・・。まずは用語を覚えることからのスタートです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.moongift.jp/2011/09/20110904-2/"&gt;MOONGIFTさんの記事&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;や、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wholemeal.co.nz/projects/fulcrum.html"&gt;開発者さんのブログ記事&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を読んでみたんですが、霧をつかむような感じです。&lt;/p&gt;

&lt;p&gt;やっぱ使ってみることで覚えるしかないかなー、と腹をくくりました。&lt;/p&gt;

&lt;p&gt;ここで、限界に達してダウン。無理しない。&lt;/p&gt;
</content>
  </entry>
</feed>
