<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-11-14T04:09:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>リファクタリングについて考えたりとか、rspecの高速化とか</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/14/refactoring-fast-rspec-with-spring.html"/>
    <id>http://blog.url.com/2013/11/14/refactoring-fast-rspec-with-spring.html</id>
    <published>2013-11-14T04:09:00Z</published>
    <updated>2013-11-14T13:43:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="toc_0"&gt;再度リファクタリング&lt;/h1&gt;

&lt;p&gt;ActiveDecoratorで実装してた部分をModelに移す。&amp;lt;- 見た目に関係しないコードはできるだけモデルでやる方針&lt;/p&gt;

&lt;h2 id="toc_1"&gt;方針&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;内部でhelperを使ってないコードとそうでないコードをわける&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id="toc_2"&gt;Springでrspecの高速化&lt;/h1&gt;

&lt;p&gt;単体テストを手動で走らせるのに結構時間かかるので。
個人でつかうため、プロジェクトのGemfileは使わずにやる方法。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;gem install spring
&lt;span class="gp"&gt;$ &lt;/span&gt;spring rspec
&lt;/pre&gt;
&lt;p&gt;gem バージョンが古いというエラーが出るので、gemのアップデート&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;gem install rubygems-update
&lt;span class="gp"&gt;$ &lt;/span&gt;update_rubygems
&lt;/pre&gt;
&lt;p&gt;次のようにするといいらしい&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;gem pristine --all
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;gem pristine&lt;/code&gt;: gemの隠し場所にあるファイルからインストールしたgemを初期状態へ戻す&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;from: &lt;a title="Rubyのパッケージマネジメントシステムgem(Rubygems)のコマンド一覧" href="http://blog.layer8.sh/ja/2012/04/16/ruby%E3%81%AE%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%9E%E3%83%8D%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0gemrubygems%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3/"&gt;Rubyのパッケージマネジメントシステムgem(Rubygems)のコマンド一覧&lt;/a&gt;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;spring rspec hoge_spec.rb
Version: 0.9.2

Usage: spring COMMAND &lt;span class="o"&gt;[&lt;/span&gt;ARGS]

Commands &lt;span class="k"&gt;for &lt;/span&gt;spring itself:
....
&lt;/pre&gt;
&lt;p&gt;あれ・・・？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title="jonleighton/spring-commands-rspec" href="https://github.com/jonleighton/spring-commands-rspec"&gt;jonleighton/spring-commands-rspec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こういうのがある&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;gem install spring-commands-rspec
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;~/.spring.rb&lt;/code&gt;に次のように書く&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;spring/commands/rspec&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="highlight shell"&gt;spring rspec path/to/hoge_spec.rb
&lt;/pre&gt;
&lt;p&gt;成功。結構速くなってハッピー&lt;/p&gt;

&lt;h2 id="toc_3"&gt;参考その１&lt;/h2&gt;

&lt;p&gt;spec_helper等、specファイル中でロードエラーが出る場合。&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;spring rspec path/to/hoge_spec.rb
require&lt;span class="s1"&gt;&amp;#39;: cannot load such file -- spec_helper (LoadError)
&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;こんな時は、プロジェクトルートで一回&lt;code&gt;spring rspec&lt;/code&gt;を実行しておく&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;spring stop
&lt;span class="gp"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$PROJECT_ROOT&lt;/span&gt;
&lt;span class="gp"&gt;$ &lt;/span&gt;spring rspec path/to/hoge_spec.rb
&lt;/pre&gt;
&lt;p&gt;これで、プロジェクトルートをカレントディレクトリとしてspringでrailsが読み込まれるので、requireでパスを正しく読み込める。&lt;/p&gt;

&lt;h2 id="toc_4"&gt;参考その２&lt;/h2&gt;

&lt;p&gt;emacsのrspec-modeで、上記のようにしてspringを使うと、自動ではspringがONにならない。
これはtmpにpidファイルが作られないため。
強制的にspringを使うには、次のように設定する。&lt;/p&gt;
&lt;pre class="highlight text"&gt;(require &amp;#39;rspec-mode)
(defun rspec-spring-p () t)
&lt;/pre&gt;
&lt;p&gt;ちなみに、rspec-modeでは&lt;code&gt;C-c , v&lt;/code&gt;で開いているファイルに関連するテストだけを走らせる事ができる。&lt;/p&gt;

&lt;h1 id="toc_5"&gt;新知識&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="Rubyでクラスメソッドをprivateにする正しい方法 - Hello, world! - s21g" href="http://blog.s21g.com/articles/561"&gt;Rubyでクラスメソッドをprivateにする正しい方法 - Hello, world! - s21g&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="Rubyのアクセス制御について(protectとprivate) - おもしろWEBサービス開発日記" href="http://d.hatena.ne.jp/willnet/20080612/1213286518"&gt;Rubyのアクセス制御について(protectとprivate) - おもしろWEBサービス開発日記&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="Active Record scopes vs class methods | Plataformatec Blog" href="http://blog.plataformatec.com.br/2013/02/active-record-scopes-vs-class-methods/"&gt;Active Record scopes vs class methods | Plataformatec Blog&lt;/a&gt;
scopeじゃなくてClassMethodではだめなの？という疑問に対して&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>リファクタリング、SQL left join、Rails Model Scope、ベンチマーク</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/13/huga.html"/>
    <id>http://blog.url.com/2013/11/13/huga.html</id>
    <published>2013-11-13T03:31:00Z</published>
    <updated>2013-11-14T13:43:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="toc_0"&gt;リファクタリング&lt;/h1&gt;

&lt;p&gt;先日書いた、ActiveDecoratorを使ったコードをリファクタリングしてみました。Moduleのメソッドに多態性をもたせるには、include元のクラスでメソッドを上書きするといいのかなあと、昨日思いつき・・・。&lt;/p&gt;

&lt;h1 id="toc_1"&gt;SQL left join&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;LEFT JOINとRIGHT JOINは、左右いずれかの表を優先させたいときに指定する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LEFT JOIN&lt;/p&gt;

&lt;p&gt;左側に指定された表のすべての行が表示される&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RIGHT JOIN&lt;/p&gt;

&lt;p&gt;右側に指定された表のすべての行が表示される&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;from: &lt;a href="http://www.pursue.ne.jp/jouhousyo/SQLDoc/select22.html"&gt;http://www.pursue.ne.jp/jouhousyo/SQLDoc/select22.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="toc_2"&gt;Rails Model Scope&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="Ruby on Rails | scopeでModelに検索条件を定義 - tbpg’s programming memo" href="http://d.hatena.ne.jp/tbpg/20130805/1375711757"&gt;Ruby on Rails | scopeでModelに検索条件を定義 - tbpg’s programming memo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="Active Record Query Interface — Ruby on Rails Guides" href="http://guides.rubyonrails.org/active_record_querying.html#joining-tables"&gt;Active Record Query Interface — Ruby on Rails Guides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;polymorpic&lt;/code&gt;で関連付けたテーブルをjoinするにはSQL書かないとダメっぽい&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title="ruby on rails - ActiveRecord - querying polymorphic associations - Stack Overflow" href="http://stackoverflow.com/questions/680141/activerecord-querying-polymorphic-associations"&gt;ruby on rails - ActiveRecord - querying polymorphic associations - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a title="activerecord - Rails joins or preload belongs_to association from polymorphic model - Stack Overflow" href="http://stackoverflow.com/questions/5815139/rails-joins-or-preload-belongs-to-association-from-polymorphic-model"&gt;activerecord - Rails joins or preload belongs_to association from polymorphic model - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="Railsで生SQLを書かずにLEFT JOINする方法 - Qiita [キータ]" href="http://qiita.com/unosk/items/403d0fdaf91ca86aa099"&gt;Railsで生SQLを書かずにLEFT JOINする方法 - Qiita [キータ]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これ使うと&lt;/p&gt;
&lt;pre class="highlight text"&gt;ActiveRecord::ConfigurationError: Association named &amp;#39;story&amp;#39; was not found; perhaps you misspelled it?
&lt;/pre&gt;
&lt;p&gt;ってなる。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="toc_3"&gt;rails console でベンチマーク&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title="sql - How to get execution time in rails console? - Stack Overflow" href="http://stackoverflow.com/questions/3522250/how-to-get-execution-time-in-rails-console"&gt;sql - How to get execution time in rails console? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Android2.3 デフォルトブラウザでスクロールできなくなるバグ</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/12/scroll-bug-android-2-3-default-browser.html"/>
    <id>http://blog.url.com/2013/11/12/scroll-bug-android-2-3-default-browser.html</id>
    <published>2013-11-12T06:37:00Z</published>
    <updated>2013-11-14T13:43:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a title="Androidのブラウザで特定条件でスクロールできなくなるバグ - ういはるかぜの化学 - subtech" href="http://subtech.g.hatena.ne.jp/mayuki/20120701/1341133778"&gt;Androidのブラウザで特定条件でスクロールできなくなるバグ - ういはるかぜの化学 - subtech&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このブログポストがなかったら詰んでました。&lt;/p&gt;

&lt;p&gt;今のFacebookいいねボタンのiframeのbodyからは&lt;code&gt;overflow:hidden&lt;/code&gt;取り除かれてたんですが、mixiチェックのiframe bodyにはしっかりと記載されており・・・。&lt;/p&gt;

&lt;p&gt;bodyのCSSから&lt;code&gt;overflow:hidden&lt;/code&gt;取り除く、対応していただけるとありがたいです &amp;gt; mixi御中&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>active_decoratorを使ってみた</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/11/rails-active_decorator.html"/>
    <id>http://blog.url.com/2013/11/11/rails-active_decorator.html</id>
    <published>2013-11-11T02:44:00Z</published>
    <updated>2013-11-14T13:43:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;作業週の2週目です。
パーシャルを共通化していろいろなモデルのビューから使えるように、というようなことをやっています。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;active_decoratorをつかってヘルパーをまとめるメモ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a title="active_decorator - よりよいView helperであるActiveDecoratorの使い方 - Qiita [キータ]" href="http://qiita.com/toyoshi/items/205f4006ea85e2919aad"&gt;active_decorator - よりよいView helperであるActiveDecoratorの使い方 - Qiita [キータ]&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;モデル名とは別のdecoratorを作った時には、モデル用のdecoratorの&lt;code&gt;Module do .. end&lt;/code&gt;内で、&lt;code&gt;include HogeHogeDecorator&lt;/code&gt;とすればよい。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_1"&gt;JSのCacheのせいでJSイベントが２回実行されるのにハマった&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a title="Rails 3.2 の development 環境で javascript が二重に実行されてしまうときの対処方法 - 彼女からは、おいちゃんと呼ばれています" href="http://blog.inouetakuya.info/entry/20120630/1341055121"&gt;Rails 3.2 の development 環境で javascript が二重に実行されてしまうときの対処方法 - 彼女からは、おいちゃんと呼ばれています&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_2"&gt;対処法&lt;/h3&gt;
&lt;pre class="highlight text"&gt;$ bundle exec rake assets:clean RAILS_ENV=development
&lt;/pre&gt;
&lt;p&gt;でpublic/assetsをクリーン&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TDD</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/08/tdd.html"/>
    <id>http://blog.url.com/2013/11/08/tdd.html</id>
    <published>2013-11-08T10:11:00Z</published>
    <updated>2013-11-14T13:43:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://256interns.com/practices/44"&gt;http://256interns.com/practices/44&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今日はTDDのプラクティスやりました。@t_wadaさんの講義すごくためになりました。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://gihyo.jp/dev/serial/01/tdd/0016"&gt;TDDで新しい言語を学ぶ話&lt;/a&gt;、実践してみたい。
&lt;a href="http://gihyo.jp/dev/serial/01/tdd/0020"&gt;テストコードの重複の話&lt;/a&gt;も面白かったです。&lt;/p&gt;

&lt;p&gt;テストの粒度やモックの話など、考え始めるときりがないですが、そこがテストの面白さかなあーと思ったりしています。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>gitとhttp</title>
    <link rel="alternate" href="http://blog.url.com/2013/11/07/git-http.html"/>
    <id>http://blog.url.com/2013/11/07/git-http.html</id>
    <published>2013-11-07T10:16:00Z</published>
    <updated>2013-11-14T13:43:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;ul&gt;
&lt;li&gt;Git: &lt;a href="http://256interns.com/practices/48"&gt;http://256interns.com/practices/48&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTTP: &lt;a href="http://256interns.com/practices/15"&gt;http://256interns.com/practices/15&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今日は、GitとHTTPをメインに進めていきました。
いままで、なんとなくでやっていたところをしっかりと学ぶ感じです。&lt;/p&gt;

&lt;p&gt;Gitは &lt;a href="http://k.swd.cc/learnGitBranching-ja/"&gt;http://k.swd.cc/learnGitBranching-ja/&lt;/a&gt; がすごいよかったです。
こうやってビジュアル的に理解できると、後々記憶に残りそう。
&lt;code&gt;$ show solution&lt;/code&gt;でカンニングできるので、わからない時につかいます。&lt;/p&gt;

&lt;p&gt;明日からは、いよいよRails開発っぽいところに入っていきます。楽しみ。&lt;/p&gt;
</content>
  </entry>
</feed>
